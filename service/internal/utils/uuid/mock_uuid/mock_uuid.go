// Code generated by mockery v2.12.0. DO NOT EDIT.

package mock_uuid

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// MockUuid is an autogenerated mock type for the IUuid type
type MockUuid struct {
	mock.Mock
}

type MockUuid_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUuid) EXPECT() *MockUuid_Expecter {
	return &MockUuid_Expecter{mock: &_m.Mock}
}

// GetUUID provides a mock function with given fields:
func (_m *MockUuid) GetUUID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockUuid_GetUUID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetUUID'
type MockUuid_GetUUID_Call struct {
	*mock.Call
}

// GetUUID is a helper method to define mock.On call
func (_e *MockUuid_Expecter) GetUUID() *MockUuid_GetUUID_Call {
	return &MockUuid_GetUUID_Call{Call: _e.mock.On("GetUUID")}
}

func (_c *MockUuid_GetUUID_Call) Run(run func()) *MockUuid_GetUUID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUuid_GetUUID_Call) Return(_a0 string) *MockUuid_GetUUID_Call {
	_c.Call.Return(_a0)
	return _c
}

// NewMockUuid creates a new instance of MockUuid. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockUuid(t testing.TB) *MockUuid {
	mock := &MockUuid{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
